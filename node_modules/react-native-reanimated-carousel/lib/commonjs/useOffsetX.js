"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useOffsetX = void 0;

var _reactNativeReanimated = require("react-native-reanimated");

const useOffsetX = opts => {
  const {
    handlerOffsetX,
    index,
    width,
    computedAnimResult,
    loop
  } = opts;
  const {
    MAX,
    WL,
    MIN,
    LENGTH
  } = computedAnimResult;
  const x = (0, _reactNativeReanimated.useDerivedValue)(() => {
    if (loop) {
      const Wi = width * index;
      const startPos = Wi > MAX ? MAX - Wi : Wi < MIN ? MIN - Wi : Wi;
      const inputRange = [-WL, -((LENGTH - 2) * width + width / 2) - startPos - 1, -((LENGTH - 2) * width + width / 2) - startPos, 0, (LENGTH - 2) * width + width / 2 - startPos, (LENGTH - 2) * width + width / 2 - startPos + 1, WL];
      const outputRange = [startPos, 1.5 * width - 1, -((LENGTH - 2) * width + width / 2), startPos, (LENGTH - 2) * width + width / 2, -(1.5 * width - 1), startPos];
      return (0, _reactNativeReanimated.interpolate)(handlerOffsetX.value, inputRange, outputRange, _reactNativeReanimated.Extrapolate.CLAMP);
    }

    const startPos = width * index;
    return handlerOffsetX.value + startPos;
  }, [loop]);
  return x;
};

exports.useOffsetX = useOffsetX;
//# sourceMappingURL=useOffsetX.js.map