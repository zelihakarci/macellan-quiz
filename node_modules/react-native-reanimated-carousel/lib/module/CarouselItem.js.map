{"version":3,"sources":["CarouselItem.tsx"],"names":["React","View","Animated","useAnimatedStyle","useOffsetX","CarouselItem","props","handlerOffsetX","index","children","width","height","computedAnimResult","loop","x","offsetXStyle","transform","translateX","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAoBC,IAApB,QAAgC,cAAhC;AACA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AAEA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,YAOX,GAAIC,KAAD,IAAW;AACZ,QAAM;AACFC,IAAAA,cADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,KAJE;AAKFC,IAAAA,MAAM,GAAG,MALP;AAMFC,IAAAA,kBANE;AAOFC,IAAAA;AAPE,MAQFP,KARJ;AASA,QAAMQ,CAAC,GAAGV,UAAU,CAAC;AACjBG,IAAAA,cADiB;AAEjBC,IAAAA,KAFiB;AAGjBE,IAAAA,KAHiB;AAIjBE,IAAAA,kBAJiB;AAKjBC,IAAAA;AALiB,GAAD,CAApB;AAOA,QAAME,YAAY,GAAGZ,gBAAgB,CAAC,MAAM;AACxC,WAAO;AACHa,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,UAAU,EAAEH,CAAC,CAACI,KAAF,GAAUV,KAAK,GAAGE;AAAhC,OAAD;AADR,KAAP;AAGH,GAJoC,EAIlC,EAJkC,CAArC;AAMA,sBACI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEK;AAAtB,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAb,KAAiCF,QAAjC,CADJ,CADJ;AAKH,CAnCM","sourcesContent":["import React from 'react';\nimport { FlexStyle, View } from 'react-native';\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\nimport type { IComputedAnimResult } from './useComputedAnim';\nimport { useOffsetX } from './useOffsetX';\n\nexport const CarouselItem: React.FC<{\n    loop?: boolean;\n    index: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n    width: number;\n    height?: FlexStyle['height'];\n    computedAnimResult: IComputedAnimResult;\n}> = (props) => {\n    const {\n        handlerOffsetX,\n        index,\n        children,\n        width,\n        height = '100%',\n        computedAnimResult,\n        loop,\n    } = props;\n    const x = useOffsetX({\n        handlerOffsetX,\n        index,\n        width,\n        computedAnimResult,\n        loop,\n    });\n    const offsetXStyle = useAnimatedStyle(() => {\n        return {\n            transform: [{ translateX: x.value - index * width }],\n        };\n    }, []);\n\n    return (\n        <Animated.View style={offsetXStyle}>\n            <View style={{ width, height }}>{children}</View>\n        </Animated.View>\n    );\n};\n"]}